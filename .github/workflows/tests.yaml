name: Unit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: setup.py

        
      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -r requirements.txt
          pip install -r requirements_test.txt
          pip install -e .
          pip install google-cloud-storage google-cloud-aiplatform
          pip list

      # Install gcloud CLI on Ubuntu
      - name: Install gcloud CLI on Ubuntu
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk

      # Install gcloud CLI on macOS
      - name: Install gcloud CLI on macOS
        if: runner.os == 'macOS'
        run: |
          brew install --cask google-cloud-sdk

      # Install gcloud CLI on Windows
      - name: Install gcloud CLI on Windows
        if: runner.os == 'Windows'
        run: |
          choco install google-cloud-sdk -y
        env:
          PATH: C:\Program Files (x86)\Google\Cloud SDK\google-cloud-sdk\bin;${{ env.PATH }}
      
      # Authenticate with GCS
      - name: Authenticate with GCS
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/gcloud-key.json
        run: |
          echo "${{ secrets.GCLOUD_AUTH_DATA }}" > $GOOGLE_APPLICATION_CREDENTIALS
      
      # Configure service account with key
      - name: Authenticate service account
        run: |
          gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
          gcloud config set project cleaninbox-448011

      # Download data
      - name: Pull data with DVC
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/gcloud-key.json
        run: |
          dvc pull

      # Run tests
      - name: Run tests & coverage
        run: |
          coverage run -m pytest tests/ && coverage report
